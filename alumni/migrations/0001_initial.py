# Generated by Django 5.1.4 on 2025-07-17 22:21

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alumni',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(help_text='Full name of the alumni', max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('alternative_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('student_id', models.CharField(blank=True, help_text='Original student ID', max_length=20, null=True)),
                ('scheme', models.PositiveIntegerField(help_text='Academic scheme year (e.g., 2019, 2021)')),
                ('year_of_joining', models.PositiveIntegerField(help_text='Year joined the institution')),
                ('year_of_passout', models.PositiveIntegerField(help_text='Year of graduation')),
                ('department', models.CharField(default='Electronics Engineering', max_length=100)),
                ('specialization', models.CharField(blank=True, max_length=100, null=True)),
                ('cgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('current_designation', models.CharField(blank=True, max_length=150, null=True)),
                ('current_company', models.CharField(blank=True, max_length=200, null=True)),
                ('current_location', models.CharField(blank=True, max_length=100, null=True)),
                ('linkedin_profile', models.URLField(blank=True, null=True)),
                ('employment_status', models.CharField(choices=[('employed', 'Employed'), ('self_employed', 'Self Employed'), ('unemployed', 'Unemployed'), ('higher_studies', 'Higher Studies'), ('entrepreneur', 'Entrepreneur'), ('other', 'Other')], default='employed', max_length=20)),
                ('current_salary_range', models.CharField(blank=True, help_text='e.g., 3-5 LPA, 10-15 LPA', max_length=50, null=True)),
                ('achievements', models.TextField(blank=True, help_text='Notable achievements or awards', null=True)),
                ('feedback', models.TextField(blank=True, help_text='Feedback about the institution', null=True)),
                ('willing_to_mentor', models.BooleanField(default=False)),
                ('allow_contact_from_juniors', models.BooleanField(default=True)),
                ('newsletter_subscription', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_verified', models.BooleanField(default=False, help_text='Email verification status')),
                ('is_active', models.BooleanField(default=True, help_text='Active status in alumni network')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_alumni', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alumni',
                'verbose_name_plural': 'Alumni',
                'ordering': ['-year_of_passout', 'full_name'],
            },
        ),
        migrations.CreateModel(
            name='AlumniCSVUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=255)),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('total_records', models.PositiveIntegerField(default=0)),
                ('successful_imports', models.PositiveIntegerField(default=0)),
                ('failed_imports', models.PositiveIntegerField(default=0)),
                ('error_log', models.TextField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alumni_csv_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-upload_date'],
            },
        ),
        migrations.CreateModel(
            name='AlumniEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('event_date', models.DateTimeField()),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('is_virtual', models.BooleanField(default=False)),
                ('meeting_link', models.URLField(blank=True, null=True)),
                ('max_participants', models.PositiveIntegerField(blank=True, null=True)),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_alumni_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-event_date'],
            },
        ),
        migrations.CreateModel(
            name='AlumniEventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('attended', models.BooleanField(default=False)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('alumni', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_registrations', to='alumni.alumni')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='alumni.alumnievent')),
            ],
            options={
                'ordering': ['-registered_at'],
            },
        ),
        migrations.AddIndex(
            model_name='alumni',
            index=models.Index(fields=['year_of_passout', 'department'], name='alumni_alum_year_of_e2428b_idx'),
        ),
        migrations.AddIndex(
            model_name='alumni',
            index=models.Index(fields=['scheme', 'year_of_joining'], name='alumni_alum_scheme_5edf2f_idx'),
        ),
        migrations.AddIndex(
            model_name='alumni',
            index=models.Index(fields=['employment_status'], name='alumni_alum_employm_ad4c16_idx'),
        ),
        migrations.AddIndex(
            model_name='alumni',
            index=models.Index(fields=['current_company'], name='alumni_alum_current_060909_idx'),
        ),
        migrations.AddIndex(
            model_name='alumni',
            index=models.Index(fields=['email'], name='alumni_alum_email_5ff8f4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='alumnieventregistration',
            unique_together={('alumni', 'event')},
        ),
    ]
