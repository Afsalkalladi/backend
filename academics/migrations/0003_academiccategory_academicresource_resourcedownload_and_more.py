# Generated by Django 5.1.4 on 2025-07-14 16:44

import academics.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('academics', '0002_note_module_number_note_note_type_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('category_type', models.CharField(choices=[('notes', 'Notes'), ('textbook', 'Textbooks'), ('pyq', 'Previous Year Questions')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='Icon class name', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Academic Categories',
                'ordering': ['category_type', 'display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AcademicResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to=academics.models.academic_resource_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'doc', 'docx', 'ppt', 'pptx', 'txt'])])),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('module_number', models.PositiveIntegerField(choices=[(1, 'Module 1'), (2, 'Module 2'), (3, 'Module 3'), (4, 'Module 4'), (5, 'Module 5'), (0, 'General/Complete')], default=0, help_text='Module number for notes/textbooks')),
                ('exam_type', models.CharField(blank=True, choices=[('cie1', 'CIE 1'), ('cie2', 'CIE 2'), ('cie3', 'CIE 3'), ('see', 'SEE (Semester End Exam)'), ('makeup', 'Makeup Exam'), ('other', 'Other')], help_text='Exam type for PYQ', max_length=20)),
                ('exam_year', models.PositiveIntegerField(blank=True, help_text='Year of exam for PYQ', null=True)),
                ('author', models.CharField(blank=True, help_text='Author for textbooks', max_length=200)),
                ('publisher', models.CharField(blank=True, help_text='Publisher for textbooks', max_length=200)),
                ('edition', models.CharField(blank=True, help_text='Edition for textbooks', max_length=50)),
                ('isbn', models.CharField(blank=True, help_text='ISBN for textbooks', max_length=20)),
                ('is_approved', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-is_featured', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResourceDownload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('downloaded_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-downloaded_at'],
            },
        ),
        migrations.RemoveIndex(
            model_name='note',
            name='academics_n_subject_779264_idx',
        ),
        migrations.RemoveIndex(
            model_name='note',
            name='academics_n_uploade_d8f123_idx',
        ),
        migrations.RemoveIndex(
            model_name='note',
            name='academics_n_note_ty_ba9858_idx',
        ),
        migrations.AlterField(
            model_name='note',
            name='file',
            field=models.FileField(upload_to='legacy_notes/'),
        ),
        migrations.AlterField(
            model_name='note',
            name='module_number',
            field=models.PositiveIntegerField(choices=[(1, 'Module 1'), (2, 'Module 2'), (3, 'Module 3'), (4, 'Module 4'), (5, 'Module 5'), (0, 'Other/General')], default=1),
        ),
        migrations.AddField(
            model_name='academicresource',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_resources', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='academicresource',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='academics.academiccategory'),
        ),
        migrations.AddField(
            model_name='academicresource',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resources', to='academics.subject'),
        ),
        migrations.AddField(
            model_name='academicresource',
            name='uploaded_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_resources', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='resourcedownload',
            name='resource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to='academics.academicresource'),
        ),
        migrations.AddField(
            model_name='resourcedownload',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='downloads', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='academicresource',
            index=models.Index(fields=['category', 'subject', 'is_approved'], name='academics_a_categor_b2f4cc_idx'),
        ),
        migrations.AddIndex(
            model_name='academicresource',
            index=models.Index(fields=['uploaded_by'], name='academics_a_uploade_3b927c_idx'),
        ),
        migrations.AddIndex(
            model_name='academicresource',
            index=models.Index(fields=['category', 'module_number'], name='academics_a_categor_286cee_idx'),
        ),
        migrations.AddIndex(
            model_name='academicresource',
            index=models.Index(fields=['exam_type', 'exam_year'], name='academics_a_exam_ty_6eac64_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='resourcedownload',
            unique_together={('resource', 'user', 'downloaded_at')},
        ),
    ]
